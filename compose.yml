x-base: &base
  image: djangobox/django-docker-box:${PYTHON_VERSION}
  build:
    context: ${DJANGO_PATH}
    dockerfile: ${PWD}/Containerfile
    args:
    - PYTHON_VERSION=${PYTHON_VERSION}
    cache_from:
    - djangobox/django-docker-box:${PYTHON_VERSION}
  volumes:
  - ${DJANGO_PATH}:/tests/django/
  - ./settings.py:/tests/django/tests/settings.py
  entrypoint: bash -c "wait-for-it.sh -s -t 20 $${WAIT_FOR} -- python runtests.py $$@" --

x-postgresql-base: &postgresql-base
  environment:
  - POSTGRES_USER=django
  - POSTGRES_PASSWORD=django
  - POSTGRES_DB=django
  # Set a few options to speed up postgresql tests.
  command: -c fsync=off -c synchronous_commit=off -c full_page_writes=off
  tmpfs:
  - /var/lib/postgresql

services:

  # Services: Databases

  mariadb-db:
    image: mariadb:${MARIADB_VERSION}
    tmpfs:
    - /var/lib/mysql
    environment:
    - MYSQL_USER=django
    - MYSQL_PASSWORD=django
    - MYSQL_DATABASE=django
    - MYSQL_ALLOW_EMPTY_PASSWORD=1

  mysql-db: &mysql_base
    image: mysql:${MYSQL_VERSION}
    tmpfs:
    - /var/lib/mysql
    environment:
    - MYSQL_USER=django
    - MYSQL_PASSWORD=django
    - MYSQL_DATABASE=django
    - MYSQL_ALLOW_EMPTY_PASSWORD=1

  mysql-gis-db:
    <<: *mysql_base
    volumes:
    - /var/lib/mysql

  postgresql-db:
    <<: *postgresql-base
    image: postgres:${POSTGRESQL_VERSION}-alpine

  postgresql-gis-db:
    <<: *postgresql-base
    image: postgis/postgis:${POSTGRESQL_VERSION}-${POSTGIS_VERSION}-alpine

  # Services: Caches

  memcached: &memcached
    image: memcached:alpine

  memcached2:
    <<: *memcached

  # Services: Selenium

  chrome-browser:
    image: selenium/standalone-chrome
    volumes:
    - /dev/shm:/dev/shm

  firefox-browser:
    image: selenium/standalone-firefox
    volumes:
    - /dev/shm:/dev/shm

  # Commands: Tests

  mariadb:
    <<: *base
    environment:
    - DATABASE_ENGINE=django.db.backends.mysql
    - DATABASE_HOST=mariadb-db
    - WAIT_FOR=mariadb-db:3306
    depends_on:
    - mariadb-db
    - memcached
    - memcached2

  mysql:
    <<: *base
    environment:
    - DATABASE_ENGINE=django.db.backends.mysql
    - DATABASE_HOST=mysql-db
    - WAIT_FOR=mysql-db:3306
    depends_on:
    - mysql-db
    - memcached
    - memcached2

  postgresql:
    <<: *base
    environment:
    - DATABASE_ENGINE=django.db.backends.postgresql
    - DATABASE_HOST=postgresql-db
    - WAIT_FOR=postgresql-db:5432
    depends_on:
    - postgresql-db
    - memcached
    - memcached2

  sqlite:
    <<: *base
    environment:
    - DATABASE_ENGINE=django.db.backends.sqlite3
    entrypoint: python runtests.py
    depends_on:
    - memcached
    - memcached2

  # Commands: Tests: GIS

  mysql-gis:
    <<: *base
    environment:
    - DATABASE_ENGINE=django.contrib.gis.db.backends.mysql
    - DATABASE_HOST=mysql-gis-db
    - WAIT_FOR=mysql-gis-db:3306
    depends_on:
    - mysql-gis-db

  postgresql-gis:
    <<: *base
    environment:
    - DATABASE_ENGINE=django.contrib.gis.db.backends.postgis
    - DATABASE_HOST=postgresql-gis-db
    - WAIT_FOR=postgresql-gis-db:5432
    depends_on:
    - postgresql-gis-db

  sqlite-gis:
    <<: *base
    entrypoint: python runtests.py
    environment:
    - DATABASE_ENGINE=django.contrib.gis.db.backends.spatialite

  # Commands: Tests: Selenium

  chrome:
    <<: *base
    command: --selenium=chrome --selenium-hub=http://chrome-browser:4444/wd/hub
    environment:
    - DATABASE_ENGINE=django.db.backends.sqlite3
    - WAIT_FOR=chrome-browser:4444
    depends_on:
      - chrome-browser

  firefox:
    <<: *base
    command: --selenium=firefox --selenium-hub=http://firefox-browser:4444/wd/hub
    environment:
    - DATABASE_ENGINE=django.db.backends.sqlite3
    - WAIT_FOR=firefox-browser:4444
    depends_on:
    - firefox-browser

  # Commands: Other

  docs:
    <<: *base
    entrypoint: ["make", "spelling"]
    working_dir: /tests/django/docs
    user: root

  flake8:
    <<: *base
    entrypoint: flake8
