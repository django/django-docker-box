---

x-base: &base
  image: djangobox/django-docker-box:${PYTHON_VERSION}
  build:
    context: ${DJANGO_PATH}
    dockerfile: ${PWD}/Containerfile
    args:
      - PYTHON_VERSION=${PYTHON_VERSION}
    cache_from:
      - djangobox/django-docker-box:${PYTHON_VERSION}
  volumes:
    - ${DJANGO_PATH}:/tests/django/
    - ./settings.py:/tests/django/tests/settings.py
  entrypoint: python runtests.py

x-mysql-base: &mysql-base
  environment:
    - MYSQL_ALLOW_EMPTY_PASSWORD=1
    - MYSQL_DATABASE=django
    - MYSQL_PASSWORD=django
    - MYSQL_USER=django
  tmpfs:
    - /var/lib/mysql
  deploy:
    mode: global
  restart: unless-stopped
  healthcheck: &mysql-base-healthcheck
    interval: 5s
    timeout: 5s
    retries: 3
    start_period: 10s
    start_interval: 1s
  volumes:
    - ./startup-mysql.sql:/docker-entrypoint-initdb.d/django.sql:ro

x-postgresql-base: &postgresql-base
  environment:
    - POSTGRES_DB=django
    - POSTGRES_PASSWORD=django
    - POSTGRES_USER=django
  tmpfs:
    - /var/lib/postgresql
  deploy:
    mode: global
  restart: unless-stopped
  healthcheck:
    test: pg_isready --quiet --username=django
    interval: 5s
    timeout: 5s
    retries: 3
    start_period: 10s
    start_interval: 1s
  command: >-
    -c fsync=off
    -c full_page_writes=off
    -c synchronous_commit=off

x-memcached: &memcached-base
  image: memcached:alpine
  deploy:
    mode: global
  restart: unless-stopped
  healthcheck:
    test: echo stats | nc 127.0.0.1 11211
    interval: 5s
    timeout: 5s
    retries: 3
    start_period: 10s
    start_interval: 1s

x-cache-depends: &depends-on-caches
  memcached-1:
    condition: service_healthy
  memcached-2:
    condition: service_healthy

services:

  # Services: Databases

  mariadb-db:
    <<: *mysql-base
    image: mariadb:${MARIADB_VERSION}
    healthcheck:
      <<: *mysql-base-healthcheck
      test: healthcheck.sh --connect

  mysql-db:
    <<: *mysql-base
    image: &mysql-image mysql:${MYSQL_VERSION}
    healthcheck: &mysql-healthcheck
      <<: *mysql-base-healthcheck
      test: mysqladmin ping --silent

  mysql-gis-db:
    <<: *mysql-base
    image: *mysql-image
    healthcheck: *mysql-healthcheck

  postgresql-db:
    <<: *postgresql-base
    image: postgres:${POSTGRESQL_VERSION}-alpine

  postgresql-gis-db:
    <<: *postgresql-base
    image: postgis/postgis:${POSTGRESQL_VERSION}-${POSTGIS_VERSION}-alpine

  # Services: Caches

  memcached-1:
    <<: *memcached-base

  memcached-2:
    <<: *memcached-base

  # Services: Selenium

  chrome-browser:
    image: selenium/standalone-chrome
    deploy:
      mode: global
    restart: unless-stopped
    volumes:
      - /dev/shm:/dev/shm

  firefox-browser:
    image: selenium/standalone-firefox
    deploy:
      mode: global
    restart: unless-stopped
    volumes:
      - /dev/shm:/dev/shm

  # Commands: Tests

  mariadb:
    <<: *base
    depends_on:
      <<: *depends-on-caches
      mariadb-db:
        condition: service_healthy
    environment:
      - DATABASE_ENGINE=django.db.backends.mysql
      - DATABASE_HOST=mariadb-db

  mysql:
    <<: *base
    depends_on:
      <<: *depends-on-caches
      mysql-db:
        condition: service_healthy
    environment:
      - DATABASE_ENGINE=django.db.backends.mysql
      - DATABASE_HOST=mysql-db

  postgresql:
    <<: *base
    depends_on:
      <<: *depends-on-caches
      postgresql-db:
        condition: service_healthy
    environment:
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_HOST=postgresql-db

  sqlite:
    <<: *base
    depends_on:
      <<: *depends-on-caches
    environment:
      - DATABASE_ENGINE=django.db.backends.sqlite3

  # Commands: Tests: GIS

  mysql-gis:
    <<: *base
    depends_on:
      mysql-gis-db:
        condition: service_healthy
    environment:
      - DATABASE_ENGINE=django.contrib.gis.db.backends.mysql
      - DATABASE_HOST=mysql-gis-db

  postgresql-gis:
    <<: *base
    depends_on:
      postgresql-gis-db:
        condition: service_healthy
    environment:
      - DATABASE_ENGINE=django.contrib.gis.db.backends.postgis
      - DATABASE_HOST=postgresql-gis-db

  sqlite-gis:
    <<: *base
    environment:
      - DATABASE_ENGINE=django.contrib.gis.db.backends.spatialite

  # Commands: Tests: Selenium

  chrome:
    <<: *base
    command: --selenium=chrome --selenium-hub=http://chrome-browser:4444/wd/hub
    environment:
      - DATABASE_ENGINE=django.db.backends.sqlite3
    depends_on:
      - chrome-browser

  firefox:
    <<: *base
    command: --selenium=firefox --selenium-hub=http://firefox-browser:4444/wd/hub
    environment:
      - DATABASE_ENGINE=django.db.backends.sqlite3
    depends_on:
      - firefox-browser

  # Commands: Other

  docs:
    <<: *base
    entrypoint: ["make", "spelling"]
    working_dir: /tests/django/docs
    user: root

  flake8:
    <<: *base
    entrypoint: flake8
